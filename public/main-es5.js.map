{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/PostStruct.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/notfound/notfound.component.ts","webpack:///src/app/notfound/notfound.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/postform/postform.component.ts","webpack:///src/app/postform/postform.component.html","webpack:///src/app/postlist/postlist.component.ts","webpack:///src/app/postlist/postlist.component.html","webpack:///src/app/posts.service.ts","webpack:///src/app/signin/signin.component.ts","webpack:///src/app/signin/signin.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","PostStruct","postId","postTitle","postDesc","createdAt","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NavbarComponent","router","loggedIn","localToken","localStorage","getItem","userName","removeItem","navigate","window","location","reload","NotfoundComponent","PostComponent","delPost","postRoute","postToDelete","emit","post","postCreatedAt","Date","PostformComponent","postsService","activatedRoute","formdata","postButton","editButton","mode","trim","toString","addPost","subscribe","currentPost","editPost","snapshot","paramMap","get","getPostById","pipe","responseData","postElement","postSelected","updatedPostElement","_id","selectedPost","Object","assign","showPostButton","PostlistComponent","postService","posts","deletePost","getPost","getPosts","postArray","map","updatedPostArray","PostsService","http","baseURL","newPost","editedPost","put","elid","idObj","options","headers","body","JSON","stringify","providedIn","SigninComponent","userService","email","password","loginButton","hasError","emailHasError","regexpEmail","RegExp","checkEmail","userToBeLoggedIn","signInUser","loggedInUser","setItem","token","firstName","lastName","errorMessage","error","setInterval","test","inputChange","loginClick","SignupComponent","confirmPassword","signupButton","firstNameHasError","lastNameHasError","passwordHasError","confirmPasswordHasError","successMessage","isSuccess","checkFirstName","checkLastName","checkPassword","checkConfirmPassword","userToBeSignedUp","signUpUser","userCreated","message","refresh","length","signupClick","UsersService","userToBeSignedIn","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class PostStruct {\r\n  postId = '';\r\n  postTitle = '';\r\n  postDesc = '';\r\n  createdAt = '';\r\n\r\n  constructor() {\r\n    this.postId = '';\r\n    this.postTitle = '';\r\n    this.postDesc = '';\r\n    this.createdAt = null;\r\n  }\r\n}\r\n","import { SignupComponent } from './signup/signup.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { PostformComponent } from './postform/postform.component';\nimport { PostlistComponent } from './postlist/postlist.component';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'signup', pathMatch: 'full' },\n  { path: 'postlist', component: PostlistComponent },\n  { path: 'postform/:mode', component: PostformComponent },\n  { path: 'postform/:mode/:id', component: PostformComponent },\n  { path: 'signin', component: SigninComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: '**', component: NotfoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ass91';\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { PostlistComponent } from './postlist/postlist.component';\nimport { PostformComponent } from './postform/postform.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { PostComponent } from './post/post.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostlistComponent,\n    PostformComponent,\n    NavbarComponent,\n    PostComponent,\n    NotfoundComponent,\n    SigninComponent,\n    SignupComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  loggedIn = false;\n  localToken = localStorage.getItem('token');\n  userName = localStorage.getItem('name');\n  path = '';\n\n  constructor(private router: Router) {}\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('name');\n    this.loggedIn = false;\n    this.router.navigate(['/signup']).then(() => {\n      window.location.reload();\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.localToken) {\n      this.loggedIn = true;\n      this.path = '/postlist';\n    } else {\n      this.loggedIn = false;\n      this.path = '/signup';\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\">\n  <a\n    class=\"navbar-brand text-white mb-2\"\n    style=\"font-size: 30px;\"\n    [routerLink]=\"path\"\n    >Blogger</a\n  >\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNav\"\n    aria-controls=\"navbarNav\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" *ngIf=\"!loggedIn\">\n        <a class=\"nav-link text-white\" [routerLink]=\"['/signin']\">SignIn</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!loggedIn\">\n        <a class=\"nav-link text-white\" [routerLink]=\"['/signup']\">SignUp</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link text-white\" [routerLink]=\"['/postlist']\">My Posts</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link text-white\" [routerLink]=\"['/postform/save']\"\n          >Create Post</a\n        >\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loggedIn\">\n        <a\n          class=\"nav-link text-white\"\n          (click)=\"logout()\"\n          style=\"cursor: pointer;\"\n          >LogOut</a\n        >\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loggedIn\">\n        <div class=\"nav-link text-white\">Hello {{ userName }}</div>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"col-sm-12\">\n    <div class=\"display-4 text-center title\">\n      404 Page Not Found!\n    </div>\n    <div class=\"col-sm-4 mx-auto my-3 desc\">\n      The page you are requesting for may be broken or just not available now.\n      Kindly visit us after some time. Click here on the Feeds button to go back\n      to the feed. Have a Great Day :-)\n    </div>\n    <div class=\"col-sm-12 text-center\">\n      <button class=\"btn btn-dark\">\n        <a\n          class=\"text-white\"\n          [routerLink]=\"['/postlist']\"\n          routerLinkActive=\"router-link-active\"\n          >Feeds</a\n        >\n      </button>\n    </div>\n  </div>\n</div>\n","import { PostStruct } from './../PostStruct';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  // tslint:disable-next-line: no-input-rename\n  @Input('post') post: PostStruct;\n  // tslint:disable-next-line: no-output-rename\n  @Output('delPost') delPost = new EventEmitter();\n  postRoute = '';\n  postCreatedAt: Date;\n\n  constructor() {}\n\n  delete(postToDelete: PostStruct) {\n    this.delPost.emit(postToDelete);\n  }\n\n  ngOnInit(): void {\n    this.postRoute = `/postform/edit/${this.post.postId}`;\n    this.postCreatedAt = new Date(this.post.createdAt);\n  }\n}\n","<div class=\"post px-3 py-2 my-4\">\n  <div class=\"col-sm-12\">\n    <div class=\"row\">\n      <div class=\"post-title\">\n        {{ post.postTitle }}\n      </div>\n      <div\n        class=\"btn-group py-1 ml-auto\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          class=\"btn btn-dark\"\n          (click)=\"delete(post)\"\n          [routerLink]=\"['/postlist']\"\n        >\n          Delete\n        </button>\n        <button type=\"button\" class=\"btn btn-dark\" [routerLink]=\"postRoute\">\n          Edit\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-12 my-3 px-0 post-description overflow-hidden\">\n    {{ post.postDesc }}\n  </div>\n  <div class=\"col-sm-12 d-flex flex-row-reverse px-0\">\n    Created At ~ {{ postCreatedAt.getHours() }}:{{ postCreatedAt.getMinutes() }}\n  </div>\n</div>\n","import { PostsService } from './../posts.service';\nimport { PostStruct } from './../PostStruct';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-postform',\n  templateUrl: './postform.component.html',\n  styleUrls: ['./postform.component.css'],\n})\nexport class PostformComponent implements OnInit {\n  // tslint:disable-next-line: no-output-rename\n  @Output('formdata') formdata = new EventEmitter<PostStruct>();\n  // tslint:disable-next-line: no-output-rename\n  // @Output('refresh') refresh = new EventEmitter();\n  postTitle = '';\n  postDesc = '';\n  postButton = true;\n  editButton = false;\n  mode = 'save';\n  currentPost: PostStruct;\n\n  showPostButton() {\n    if (this.postTitle.trim() !== '' && this.postDesc.trim() !== '') {\n      this.postButton = false;\n      this.editButton = false;\n    } else {\n      this.postButton = true;\n      this.editButton = true;\n    }\n  }\n\n  onSave() {\n    const post = new PostStruct();\n    post.postId = null;\n    post.postTitle = this.postTitle.trim();\n    post.postDesc = this.postDesc.trim();\n    post.createdAt = new Date().toString();\n    this.postsService.addPost(post).subscribe(() => {\n      this.router.navigate(['/postlist']);\n    });\n    this.postTitle = '';\n    this.postDesc = '';\n    this.postButton = true;\n  }\n\n  onEdit() {\n    const post = new PostStruct();\n    post.postId = this.currentPost.postId;\n    post.postTitle = this.postTitle.trim();\n    post.postDesc = this.postDesc.trim();\n    post.createdAt = new Date().toString();\n    this.postsService.editPost(post).subscribe(() => {\n      this.router.navigate(['/postlist']);\n    });\n    this.postTitle = '';\n    this.postDesc = '';\n    this.editButton = true;\n  }\n\n  constructor(\n    private postsService: PostsService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.mode = this.activatedRoute.snapshot.paramMap.get('mode');\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n    if (this.mode.trim() === 'edit') {\n      this.postsService\n        .getPostById(id)\n        .pipe(\n          map((responseData) => {\n            const postElement = responseData.postSelected;\n            // tslint:disable-next-line: prefer-const\n            let updatedPostElement = new PostStruct();\n            updatedPostElement.postId = postElement._id;\n            updatedPostElement.postDesc = postElement.postDesc;\n            updatedPostElement.postTitle = postElement.postTitle;\n            updatedPostElement.createdAt = postElement.createdAt;\n            return updatedPostElement;\n          })\n        )\n        .subscribe((selectedPost) => {\n          this.currentPost = Object.assign(selectedPost);\n          this.postTitle = selectedPost.postTitle;\n          this.postDesc = selectedPost.postDesc;\n        });\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"col-sm-12\">\n    <div class=\"col-sm-12 m-4\">\n      <div class=\"display-3 text-center\">Whats on your mind?</div>\n    </div>\n    <form class=\"col-sm-10 offset-sm-1\" autocomplete=\"off\">\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Post Title*\"\n          name=\"postTitle\"\n          [(ngModel)]=\"postTitle\"\n          (input)=\"showPostButton()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\">\n        <textarea\n          class=\"form-control description\"\n          placeholder=\"Post Description*\"\n          name=\"postDesc\"\n          [(ngModel)]=\"postDesc\"\n          (input)=\"showPostButton()\"\n        ></textarea>\n      </div>\n      <div class=\"form-group col-sm-12 text-muted\">\n        All fields are mandatory*\n      </div>\n      <div class=\"form-group col-sm-3 ml-auto\">\n        <button\n          type=\"button\"\n          class=\"form-control btn btn-secondary text-white\"\n          [disabled]=\"postButton\"\n          (click)=\"onSave()\"\n          *ngIf=\"mode === 'save'\"\n        >\n          Post\n        </button>\n      </div>\n      <div class=\"form-group col-sm-3 ml-auto\">\n        <button\n          type=\"button\"\n          class=\"form-control btn btn-secondary text-white\"\n          [disabled]=\"editButton\"\n          (click)=\"onEdit()\"\n          *ngIf=\"mode === 'edit'\"\n        >\n          Edit\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { PostsService } from './../posts.service';\nimport { PostStruct } from './../PostStruct';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-postlist',\n  templateUrl: './postlist.component.html',\n  styleUrls: ['./postlist.component.css'],\n})\nexport class PostlistComponent implements OnInit {\n  posts: PostStruct[] = [];\n\n  constructor(private postService: PostsService) {}\n\n  deletePost(delPost: PostStruct) {\n    this.postService.deletePost(delPost).subscribe(() => {\n      this.getPost();\n    });\n  }\n\n  getPost() {\n    this.postService\n      .getPosts()\n      .pipe(\n        map((responseData) => {\n          return responseData.postArray.map((postElement) => {\n            // tslint:disable-next-line: prefer-const\n            let updatedPostElement = new PostStruct();\n            updatedPostElement.postId = postElement._id;\n            updatedPostElement.postDesc = postElement.postDesc;\n            updatedPostElement.postTitle = postElement.postTitle;\n            updatedPostElement.createdAt = postElement.createdAt;\n            return updatedPostElement;\n          });\n        })\n      )\n      .subscribe((updatedPostArray) => {\n        this.posts = updatedPostArray;\n      });\n  }\n\n  ngOnInit(): void {\n    this.getPost();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <div class=\"display-3 text-center\">Feeds</div>\n      <div class=\"col-sm-10 offset-sm-1\" *ngFor=\"let post of posts\">\n        <app-post [post]=\"post\" (delPost)=\"deletePost($event)\"></app-post>\n      </div>\n      <div\n        class=\"display-4 col-sm-12 text-center ml-4 nothing\"\n        *ngIf=\"posts.length === 0\"\n      >\n        Nothing to Show yet :-(\n      </div>\n    </div>\n  </div>\n</div>\n","import { PostStruct } from './PostStruct';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsService {\n  baseURL = 'posts/';\n\n  addPost(newPost: PostStruct) {\n    return this.http.post<{ message: string; postSaved: any }>(\n      `${this.baseURL}post`,\n      newPost\n    );\n  }\n\n  editPost(editedPost: PostStruct) {\n    return this.http.put<{ message: string; postUpdated: any }>(\n      `${this.baseURL}updatepost`,\n      editedPost\n    );\n  }\n\n  getPostById(elid: string) {\n    const idObj = { postId: elid };\n    return this.http.post<{ message: string; postSelected: any }>(\n      `${this.baseURL}getpostbyid`,\n      idObj\n    );\n  }\n\n  deletePost(delPost: PostStruct) {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(delPost),\n    };\n    return this.http.delete<{ message: string; postDeleted: any }>(\n      `${this.baseURL}deletepost`,\n      options\n    );\n  }\n\n  getPosts() {\n    return this.http.get<{ message: string; postArray: any }>(\n      `${this.baseURL}getposts`\n    );\n  }\n\n  constructor(private http: HttpClient) {}\n}\n","import { UsersService } from './../users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  email = '';\n  password = '';\n  loginButton = true;\n  errorMessage: string;\n  hasError = false;\n  emailHasError = false;\n  regexpEmail: RegExp = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$');\n\n  inputChange() {\n    if (\n      this.email.trim() !== '' &&\n      this.password.trim() !== '' &&\n      this.checkEmail()\n    ) {\n      this.loginButton = false;\n    } else {\n      this.loginButton = true;\n    }\n  }\n\n  loginClick() {\n    const userToBeLoggedIn = {\n      email: this.email,\n      password: this.password,\n    };\n    this.userService.signInUser(userToBeLoggedIn).subscribe((responseData) => {\n      if (responseData.loggedInUser !== null) {\n        localStorage.setItem('token', responseData.token);\n        localStorage.setItem(\n          'name',\n          `${responseData.loggedInUser.firstName} ${responseData.loggedInUser.lastName}`\n        );\n        this.router.navigate(['/postlist']).then(() => {\n          window.location.reload();\n        });\n      } else {\n        this.errorMessage = responseData.error;\n        this.hasError = true;\n        setInterval(() => {\n          this.hasError = false;\n        }, 3000);\n      }\n    });\n  }\n\n  checkEmail() {\n    if (this.email.trim() !== '') {\n      if (this.regexpEmail.test(this.email) === true) {\n        this.emailHasError = false;\n        return true;\n      } else {\n        this.emailHasError = true;\n        return false;\n      }\n    } else {\n      this.emailHasError = true;\n      return false;\n    }\n  }\n\n  constructor(private userService: UsersService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.email = '';\n    this.password = '';\n    this.loginButton = true;\n    this.errorMessage = '';\n    this.hasError = false;\n    this.emailHasError = false;\n  }\n}\n","<div class=\"container\">\n  <div class=\"col-sm-12\">\n    <div class=\"col-sm-12 m-4\">\n      <div class=\"display-3 text-center\">Login Here</div>\n    </div>\n    <form class=\"col-sm-10 offset-sm-1\" autocomplete=\"off\">\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          placeholder=\"Email*\"\n          name=\"email\"\n          [(ngModel)]=\"email\"\n          (input)=\"inputChange()\"\n          (change)=\"checkEmail()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\" *ngIf=\"emailHasError\">\n        <div class=\"alert alert-warning p-2\">\n          Email is invalid!\n        </div>\n      </div>\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Password*\"\n          name=\"password\"\n          [(ngModel)]=\"password\"\n          (input)=\"inputChange()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12 text-muted\">\n        Fields with * are mandatory\n      </div>\n      <div class=\"form-group col-sm-3 ml-auto\">\n        <button\n          type=\"button\"\n          class=\"form-control btn btn-secondary text-white\"\n          [disabled]=\"loginButton\"\n          (click)=\"loginClick()\"\n        >\n          LOGIN\n        </button>\n      </div>\n    </form>\n    <div class=\"col-sm-10 offset-sm-1\" *ngIf=\"hasError\">\n      <div class=\"col-sm-12 alert alert-danger\">\n        {{ errorMessage }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { UsersService } from './../users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  firstName = '';\n  lastName = '';\n  email = '';\n  password = '';\n  confirmPassword = '';\n  signupButton = true;\n  hasError = false;\n  errorMessage = '';\n  firstNameHasError = false;\n  lastNameHasError = false;\n  emailHasError = false;\n  passwordHasError = false;\n  confirmPasswordHasError = false;\n  regexpEmail: RegExp = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$');\n  successMessage = '';\n  isSuccess = false;\n\n  inputChange() {\n    if (\n      this.firstName.trim() !== '' &&\n      this.lastName.trim() !== '' &&\n      this.email.trim() !== '' &&\n      this.password.trim() !== '' &&\n      this.confirmPassword.trim() !== '' &&\n      this.checkFirstName() &&\n      this.checkLastName() &&\n      this.checkEmail() &&\n      this.checkPassword() &&\n      this.checkConfirmPassword()\n    ) {\n      this.signupButton = false;\n    } else {\n      this.signupButton = true;\n    }\n  }\n\n  signupClick() {\n    const userToBeSignedUp = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      password: this.password,\n    };\n    this.userService.signUpUser(userToBeSignedUp).subscribe((responseData) => {\n      if (responseData.userCreated !== null) {\n        this.successMessage = responseData.message;\n        this.isSuccess = true;\n        setInterval(() => {\n          this.isSuccess = false;\n        }, 3000);\n        this.refresh();\n      } else {\n        this.errorMessage = responseData.error;\n        this.hasError = true;\n        setInterval(() => {\n          this.hasError = false;\n        }, 3000);\n      }\n    });\n  }\n\n  checkFirstName() {\n    if (this.firstName.trim() !== '') {\n      this.firstNameHasError = false;\n      return true;\n    } else {\n      this.firstNameHasError = true;\n      return false;\n    }\n  }\n  checkLastName() {\n    if (this.lastName.trim() !== '') {\n      this.lastNameHasError = false;\n      return true;\n    } else {\n      this.lastNameHasError = true;\n      return false;\n    }\n  }\n  checkEmail() {\n    if (this.email.trim() !== '') {\n      if (this.regexpEmail.test(this.email) === true) {\n        this.emailHasError = false;\n        return true;\n      } else {\n        this.emailHasError = true;\n        return false;\n      }\n    } else {\n      this.emailHasError = true;\n      return false;\n    }\n  }\n  checkPassword() {\n    if (this.password.trim() !== '') {\n      if (this.password.length >= 8) {\n        this.passwordHasError = false;\n        return true;\n      } else {\n        this.passwordHasError = true;\n        return false;\n      }\n    } else {\n      this.passwordHasError = true;\n      return false;\n    }\n  }\n  checkConfirmPassword() {\n    if (this.password === this.confirmPassword) {\n      this.confirmPasswordHasError = false;\n      return true;\n    } else {\n      this.confirmPasswordHasError = true;\n      return false;\n    }\n  }\n\n  refresh() {\n    this.firstName = '';\n    this.lastName = '';\n    this.email = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.signupButton = true;\n    this.hasError = false;\n    this.errorMessage = '';\n    this.firstNameHasError = false;\n    this.lastNameHasError = false;\n    this.emailHasError = false;\n    this.passwordHasError = false;\n    this.confirmPasswordHasError = false;\n  }\n\n  constructor(private userService: UsersService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n}\n","<div class=\"container\">\n  <div class=\"col-sm-12\">\n    <div class=\"col-sm-12 m-4\">\n      <div class=\"display-3 text-center\">Sign Up for free</div>\n    </div>\n    <form class=\"col-sm-10 offset-sm-1\" autocomplete=\"off\">\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"First Name*\"\n          name=\"firstName\"\n          [(ngModel)]=\"firstName\"\n          (input)=\"inputChange()\"\n          (input)=\"checkFirstName()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\" *ngIf=\"firstNameHasError\">\n        <div class=\"alert alert-warning p-2\">\n          First Name is missing!\n        </div>\n      </div>\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Last Name*\"\n          name=\"lastName\"\n          [(ngModel)]=\"lastName\"\n          (input)=\"inputChange()\"\n          (input)=\"checkLastName()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\" *ngIf=\"lastNameHasError\">\n        <div class=\"alert alert-warning p-2\">\n          Last Name is missing!\n        </div>\n      </div>\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          placeholder=\"Email*\"\n          name=\"email\"\n          [(ngModel)]=\"email\"\n          (input)=\"inputChange()\"\n          (input)=\"checkEmail()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\" *ngIf=\"emailHasError\">\n        <div class=\"alert alert-warning p-2\">\n          Email is invalid!\n        </div>\n      </div>\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Password*\"\n          name=\"password\"\n          [(ngModel)]=\"password\"\n          (input)=\"inputChange()\"\n          (change)=\"checkPassword()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\" *ngIf=\"passwordHasError\">\n        <div class=\"alert alert-warning p-2\">\n          Password must be 8 characters or more!\n        </div>\n      </div>\n      <div class=\"form-group col-sm-12\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Confirm Password*\"\n          name=\"confirmPassword\"\n          [(ngModel)]=\"confirmPassword\"\n          (input)=\"inputChange()\"\n          (input)=\"checkConfirmPassword()\"\n        />\n      </div>\n      <div class=\"form-group col-sm-12\" *ngIf=\"confirmPasswordHasError\">\n        <div class=\"alert alert-warning p-2\">\n          Passwords don't match!\n        </div>\n      </div>\n      <div class=\"form-group col-sm-12 text-muted\">\n        Fields with * are mandatory\n      </div>\n      <div class=\"form-group col-sm-3 ml-auto\">\n        <button\n          type=\"button\"\n          class=\"form-control btn btn-secondary text-white\"\n          [disabled]=\"signupButton\"\n          (click)=\"signupClick()\"\n        >\n          REGISTER\n        </button>\n      </div>\n    </form>\n    <div class=\"col-sm-10 offset-sm-1\" *ngIf=\"hasError\">\n      <div class=\"col-sm-12 alert alert-danger\">\n        {{ errorMessage }}\n      </div>\n    </div>\n    <div class=\"col-sm-10 offset-sm-1\" *ngIf=\"isSuccess\">\n      <div class=\"col-sm-12 alert alert-success\">\n        {{ successMessage }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  baseURL = 'users/';\n\n  signInUser(userToBeSignedIn) {\n    return this.http.post<{\n      error: string;\n      message: string;\n      loggedInUser: any;\n      token: string;\n    }>(`${this.baseURL}signin`, userToBeSignedIn);\n  }\n\n  signUpUser(userToBeSignedUp) {\n    return this.http.post<{ error: string; message: string; userCreated: any }>(\n      `${this.baseURL}register`,\n      userToBeSignedUp\n    );\n  }\n  constructor(private http: HttpClient) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}